# Generated by Django 4.2.19 on 2025-03-13 18:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("course", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content",
                    models.CharField(
                        help_text="Entrez la question",
                        max_length=1000,
                        verbose_name="Question",
                    ),
                ),
                (
                    "content_en",
                    models.CharField(
                        help_text="Entrez la question",
                        max_length=1000,
                        null=True,
                        verbose_name="Question",
                    ),
                ),
                (
                    "content_fr",
                    models.CharField(
                        help_text="Entrez la question",
                        max_length=1000,
                        null=True,
                        verbose_name="Question",
                    ),
                ),
                (
                    "content_es",
                    models.CharField(
                        help_text="Entrez la question",
                        max_length=1000,
                        null=True,
                        verbose_name="Question",
                    ),
                ),
                (
                    "content_ru",
                    models.CharField(
                        help_text="Entrez la question",
                        max_length=1000,
                        null=True,
                        verbose_name="Question",
                    ),
                ),
                (
                    "explanation",
                    models.TextField(
                        blank=True,
                        help_text="Explication de la question",
                        max_length=2000,
                        verbose_name="Explication",
                    ),
                ),
                (
                    "explanation_en",
                    models.TextField(
                        blank=True,
                        help_text="Explication de la question",
                        max_length=2000,
                        null=True,
                        verbose_name="Explication",
                    ),
                ),
                (
                    "explanation_fr",
                    models.TextField(
                        blank=True,
                        help_text="Explication de la question",
                        max_length=2000,
                        null=True,
                        verbose_name="Explication",
                    ),
                ),
                (
                    "explanation_es",
                    models.TextField(
                        blank=True,
                        help_text="Explication de la question",
                        max_length=2000,
                        null=True,
                        verbose_name="Explication",
                    ),
                ),
                (
                    "explanation_ru",
                    models.TextField(
                        blank=True,
                        help_text="Explication de la question",
                        max_length=2000,
                        null=True,
                        verbose_name="Explication",
                    ),
                ),
            ],
            options={
                "verbose_name": "Question",
                "verbose_name_plural": "Questions",
            },
        ),
        migrations.CreateModel(
            name="Quiz",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=60, verbose_name="Titre")),
                (
                    "title_en",
                    models.CharField(max_length=60, null=True, verbose_name="Titre"),
                ),
                (
                    "title_fr",
                    models.CharField(max_length=60, null=True, verbose_name="Titre"),
                ),
                (
                    "title_es",
                    models.CharField(max_length=60, null=True, verbose_name="Titre"),
                ),
                (
                    "title_ru",
                    models.CharField(max_length=60, null=True, verbose_name="Titre"),
                ),
                ("slug", models.SlugField(blank=True, unique=True)),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Un description du quiz",
                        verbose_name="Description",
                    ),
                ),
                (
                    "description_en",
                    models.TextField(
                        blank=True,
                        help_text="Un description du quiz",
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "description_fr",
                    models.TextField(
                        blank=True,
                        help_text="Un description du quiz",
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "description_es",
                    models.TextField(
                        blank=True,
                        help_text="Un description du quiz",
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "description_ru",
                    models.TextField(
                        blank=True,
                        help_text="Un description du quiz",
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("assignment", "Devoir"),
                            ("practice", "Exercice pratique"),
                        ],
                        max_length=20,
                        verbose_name="catégorie",
                    ),
                ),
                (
                    "random_order",
                    models.BooleanField(
                        default=False,
                        help_text="Afficher les réponses de façon aléatoire?",
                        verbose_name="Ordre aléatoire",
                    ),
                ),
                (
                    "answers_at_end",
                    models.BooleanField(
                        default=False,
                        help_text="Réponse à la fin?",
                        verbose_name="Réponse à la fin",
                    ),
                ),
                (
                    "single_attempt",
                    models.BooleanField(
                        default=False,
                        help_text="Un seule tentative?",
                        verbose_name="Tentative unique",
                    ),
                ),
                (
                    "pass_mark",
                    models.SmallIntegerField(
                        default=10,
                        help_text="Pourcentage réquis.",
                        validators=[django.core.validators.MaxValueValidator(20)],
                        verbose_name="Note de passage",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="course.course"
                    ),
                ),
            ],
            options={
                "verbose_name": "Quiz",
                "verbose_name_plural": "Quizzes",
            },
        ),
        migrations.CreateModel(
            name="EssayQuestion",
            fields=[
                (
                    "question_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="quiz.question",
                    ),
                ),
            ],
            options={
                "verbose_name": "Question à réponse libres",
                "verbose_name_plural": "Questions à réponses libres",
            },
            bases=("quiz.question",),
        ),
        migrations.CreateModel(
            name="MCQuestion",
            fields=[
                (
                    "question_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="quiz.question",
                    ),
                ),
                (
                    "choice_order",
                    models.CharField(
                        blank=True,
                        choices=[("content", "Comme tel"), ("random", "Alatoire")],
                        help_text="L'option d'affichage",
                        max_length=30,
                        verbose_name="Ordre d'affichage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Question à choix multiples",
                "verbose_name_plural": "Questions à choix multiples",
            },
            bases=("quiz.question",),
        ),
        migrations.CreateModel(
            name="Sitting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "question_order",
                    models.CharField(
                        max_length=1024,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^\\d+(?:,\\d+)*\\Z"),
                                code="invalid",
                                message="Enter only digits separated by commas.",
                            )
                        ],
                        verbose_name="Ordre des questions",
                    ),
                ),
                (
                    "question_list",
                    models.CharField(
                        max_length=1024,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^\\d+(?:,\\d+)*\\Z"),
                                code="invalid",
                                message="Enter only digits separated by commas.",
                            )
                        ],
                        verbose_name="Liste de questions",
                    ),
                ),
                (
                    "incorrect_questions",
                    models.CharField(
                        blank=True,
                        max_length=1024,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^\\d+(?:,\\d+)*\\Z"),
                                code="invalid",
                                message="Enter only digits separated by commas.",
                            )
                        ],
                        verbose_name="Questions incorrectes",
                    ),
                ),
                ("current_score", models.IntegerField(verbose_name="Score actuel")),
                (
                    "complete",
                    models.BooleanField(default=False, verbose_name="Complete"),
                ),
                (
                    "user_answers",
                    models.TextField(
                        blank=True, default="{}", verbose_name="User Answers"
                    ),
                ),
                (
                    "start",
                    models.DateTimeField(auto_now_add=True, verbose_name="Début"),
                ),
                (
                    "end",
                    models.DateTimeField(blank=True, null=True, verbose_name="Fin"),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="course.course",
                        verbose_name="Course",
                    ),
                ),
                (
                    "quiz",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="quiz.quiz",
                        verbose_name="Quiz",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Elève",
                    ),
                ),
            ],
            options={
                "permissions": (("view_sittings", "Can see completed exams."),),
            },
        ),
        migrations.AddField(
            model_name="question",
            name="quiz",
            field=models.ManyToManyField(
                blank=True, to="quiz.quiz", verbose_name="Quiz"
            ),
        ),
        migrations.CreateModel(
            name="Progress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.CharField(
                        max_length=1024,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^\\d+(?:,\\d+)*\\Z"),
                                code="invalid",
                                message="Enter only digits separated by commas.",
                            )
                        ],
                        verbose_name="Score",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Progress",
                "verbose_name_plural": "User progress records",
            },
        ),
        migrations.CreateModel(
            name="Choice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "choice_text",
                    models.CharField(
                        help_text="Entrer le choix",
                        max_length=1000,
                        verbose_name="Contenu",
                    ),
                ),
                (
                    "choice_text_en",
                    models.CharField(
                        help_text="Entrer le choix",
                        max_length=1000,
                        null=True,
                        verbose_name="Contenu",
                    ),
                ),
                (
                    "choice_text_fr",
                    models.CharField(
                        help_text="Entrer le choix",
                        max_length=1000,
                        null=True,
                        verbose_name="Contenu",
                    ),
                ),
                (
                    "choice_text_es",
                    models.CharField(
                        help_text="Entrer le choix",
                        max_length=1000,
                        null=True,
                        verbose_name="Contenu",
                    ),
                ),
                (
                    "choice_text_ru",
                    models.CharField(
                        help_text="Entrer le choix",
                        max_length=1000,
                        null=True,
                        verbose_name="Contenu",
                    ),
                ),
                (
                    "correct",
                    models.BooleanField(
                        default=False,
                        help_text="Est-ce correct?",
                        verbose_name="Correcte",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="quiz.mcquestion",
                        verbose_name="Question",
                    ),
                ),
            ],
            options={
                "verbose_name": "Choice",
                "verbose_name_plural": "Choix",
            },
        ),
    ]
