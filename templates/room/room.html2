{% extends "base.html" %}

{% block title %} {{ room.name }} | {% endblock title %}

{% block content %}

<style>
    .chat-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        padding: 20px;
    }
    .sidebar {
        flex: 1;
        background: #2c3e50;
        color: white;
        padding: 20px;
        border-radius: 10px;
        min-width: 250px;
    }
    .chat-window {
        flex: 3;
        background: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    .chat-messages {
        height: 400px;
        overflow-y: auto;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
        margin-bottom: 20px;
    }
    .message {
        padding: 10px;
        margin-bottom: 10px;
        border-radius: 5px;
        background: #f9f9f9;
        border: 1px solid #eee;
    }
    .message .username {
        font-weight: bold;
        color: #3498db;
    }
    .message .timestamp {
        font-size: 0.8em;
        color: #888;
    }
    .message-form textarea {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
        resize: none;
    }
    .message-form button {
        margin-top: 10px;
        padding: 10px 20px;
        background: #3498db;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
    .message-form button:hover {
        background: #2980b9;
    }
    @media (max-width: 768px) {
        .chat-container {
            flex-direction: column;
        }
        .sidebar {
            order: 2;
        }
        .chat-window {
            order: 1;
        }
    }
</style>

<div class="chat-container">
    <!-- Barre latérale pour les rooms -->
    <div class="sidebar">
        <h3>Rooms</h3>
        <ul>
            {% for room in rooms %}
                <li><a href="{% url 'room' room.slug %}" style="color: white;">{{ room.name }}</a></li>
            {% endfor %}
        </ul>
        <hr>
        <h3>Créer une Room</h3>
        <form method="post" action="{% url 'create_room' %}">
            {% csrf_token %}
            <input type="text" name="name" placeholder="Nom de la room" required>
            <button type="submit" style="margin-top: 10px;">Créer</button>
        </form>
    </div>

    <!-- Fenêtre de chat -->
    <div class="chat-window">
        <h3>Groupe: {{ room.name }}</h3>
        <div class="chat-messages" id="chat-messages">
            {% for message in messages %}
                <div class="message">
                    <span class="username">{{ message.user.username }}</span>
                    <span class="timestamp">{{ message.date_added|timesince }} ago</span>
                    <p>{{ message.content|safe }}</p>
                </div>
            {% endfor %}
        </div>

        <!-- Formulaire d'envoi de message -->
        <form class="message-form" id="message-form">
            <textarea name="content" id="editor" placeholder="Votre message ici..."></textarea>
            <button type="submit" id="chat-message-submit">Envoyer</button>
        </form>
    </div>
</div>

{% endblock content %}

{% block scripts %}
{{ room.slug|json_script:"json-roomname" }}
{{ request.user.username|json_script:"json-username" }}

<script>
    CKEDITOR.replace('editor', {
        height: '100px',
        toolbar: 'Basic',
    });
    let editor = CKEDITOR.instances.editor;

    let roomName = JSON.parse(document.getElementById('json-roomname').textContent);
    let userName = JSON.parse(document.getElementById('json-username').textContent);

    const chatSocket = new WebSocket(
        'ws://' + window.location.host + '/ws/' + roomName + '/'
    );

    chatSocket.onmessage = function (response) {
        let data = JSON.parse(response.data);

        if (data.message) {
            let html = `
                <div class="message">
                    <span class="username">${data.username}</span>
                    <span class="timestamp">just now</span>
                    <p>${data.message}</p>
                </div>`;
            document.querySelector("#chat-messages").innerHTML += html;
            scrollToBottom();
        }
    };

    chatSocket.onclose = function (e) {
        console.error('Chat socket closed unexpectedly');
    };

    document.querySelector("#message-form").onsubmit = function (e) {
        e.preventDefault();
        let message = editor.getData();
        chatSocket.send(JSON.stringify({
            'message': message,
            'username': userName,
            'room': roomName
        }));
        editor.setData('');
        return false;
    };

    function scrollToBottom() {
        const objDiv = document.querySelector("#chat-messages");
        objDiv.scrollTop = objDiv.scrollHeight;
    }

    scrollToBottom();
</script>
{% endblock scripts %}