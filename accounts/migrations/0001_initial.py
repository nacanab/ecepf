# Generated by Django 4.2.19 on 2025-03-13 18:25

import accounts.models
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("is_student", models.BooleanField(default=False)),
                ("is_lecturer", models.BooleanField(default=False)),
                ("is_parent", models.BooleanField(default=False)),
                ("is_dep_head", models.BooleanField(default=False)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Masculin"), ("F", "Féminin")],
                        max_length=1,
                        null=True,
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=60, null=True)),
                ("address", models.CharField(blank=True, max_length=60, null=True)),
                (
                    "last_activity",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "picture",
                    models.ImageField(
                        default="default.png",
                        null=True,
                        upload_to="profile_pictures/%y/%m/%d/",
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
            ],
            options={
                "ordering": ("-date_joined",),
            },
            managers=[
                ("objects", accounts.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="DepartmentHead",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "ordering": ("-user__date_joined",),
            },
        ),
        migrations.CreateModel(
            name="FCMToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(max_length=255, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Lecturer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Parent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=120)),
                ("last_name", models.CharField(max_length=120)),
                ("phone", models.CharField(blank=True, max_length=60, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "relation_ship",
                    models.TextField(
                        blank=True,
                        choices=[
                            ("Père", "Père"),
                            ("Mère", "Mère"),
                            ("Frère", "Frère"),
                            ("Soeur", "Soeur"),
                            ("Grand-mère", "Grand-mère"),
                            ("Grand-père", "Grand-père"),
                            ("Autre", "Autre"),
                        ],
                    ),
                ),
            ],
            options={
                "ordering": ("-user__date_joined",),
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bio", models.TextField(blank=True, null=True)),
                ("is_assigned", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ("-student__date_joined",),
            },
        ),
        migrations.CreateModel(
            name="UserSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("login_time", models.DateTimeField(default=django.utils.timezone.now)),
                ("logout_time", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "firebase_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StudentLogs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.CharField(max_length=255)),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("course_registration", "Inscription à un cours"),
                            ("quiz_completion", "Quiz terminé"),
                            ("login", "Connexion"),
                            ("logout", "Déconnexion"),
                            ("other", "Autre"),
                        ],
                        default="other",
                        max_length=50,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_logs",
                        to="accounts.student",
                    ),
                ),
            ],
            options={
                "verbose_name": "Student Log",
                "verbose_name_plural": "Student Logs",
                "ordering": ("-timestamp",),
            },
        ),
    ]
